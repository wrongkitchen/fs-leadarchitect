/**
*   Author Custom Mixins
*/

@mixin clearfix() {
    zoom: 1;
    &:before {
        content: '';
        display: block;
    }
    &:after {
        content: '';
        display: table;
        clear: both;
    }
}
@mixin retina($url, $retinaUrl, $width, $height) {
    background-image: url($url);
    @media (-webkit-min-device-pixel-ratio: 2), (-moz-min-device-pixel-ratio: 2) {
        & {
            background-image: url($retinaUrl);
            -webkit-background-size: $width $height;
        }
    }
}
@mixin respond-to($media) {
    @if $media == mobile {
        @media screen and (max-width: $mobileMaxWidth) { 
            @content; 
        }
    }
    @else if $media == tablet {
        @media screen and (min-width: $mobileMaxWidth + 1) and (max-width: $tabletMaxWidth - 1) { 
            @content; 
        }
    }
    @else if $media == mix {
        @media screen and (max-width: $tabletMaxWidth - 1) { 
            @content; 
        }
    }
    @else {
        @media screen and (max-width: $media) { 
            @content; 
        }
    }
}

@mixin respond-fonts($fontsize){
    font-size: $fontsize;
    @if $fontsize == $fontSize1{
        @include respond-to(mobile){
            font-size: 32px;
        }
    } 
    @else if $fontsize == $fontSize2{
        @include respond-to(mobile){
            font-size: 18px;
        }
    }
    @else if $fontsize == $fontSize3{
        @include respond-to(mobile){
            font-size: 14px;
        }
    }
    @else if $fontsize == $fontSize4{
        @include respond-to(mobile){
            font-size: 12px;
        }
    }
    @else if $fontsize == $fontSize5{
        @include respond-to(mobile){
            font-size: 10px;
        }
    }
}